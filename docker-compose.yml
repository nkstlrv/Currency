version: "3.9"

services:

  backend:
#    command: python3 .app/manage.py runserver 0.0.0.0:5000
    image: currency-backend
    stdin_open: true
    tty: true
    build: .
    container_name: backend
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - rabbitmq
      - memcached
    volumes:
      - "./:/project/code"

  celery:
    command: bash -c "celery -A settings worker -l INFO --autoscale=0,10"
#    - bash -c "cd app && celery -A settings beat -l INFO"
    image: currency-backend
    stdin_open: true
    tty: true
    build: .
    container_name: celery
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - backend

  celery-beat:
    command: bash -c "celery -A settings beat -l INFO"
    image: currency-backend
    stdin_open: true
    tty: true
    build: .
    container_name: celery-beat
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - backend
      - celery


  memcached:
    image: memcached:1.6.21-alpine
    container_name: memcached
    env_file:
      - .env
    ports:
      - "11211:11211"

  rabbitmq:
    image: rabbitmq:3.12.4-management
    container_name: rabbitmq
    env_file:
      - .env
    ports:
      - "5673:5672"
      - "15672:15672"

  postgres:
    image: postgres:15.4-alpine
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf:ro"

volumes:
  db_data: { }

